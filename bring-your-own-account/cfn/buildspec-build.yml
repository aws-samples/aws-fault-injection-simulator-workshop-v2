version: 0.2
phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - npm install aws-cdk -g
      - CDK_STACK=$(aws cloudformation list-stacks --query 'StackSummaries[?(StackName==`CDKToolkit` && StackStatus==`CREATE_COMPLETE`)].StackId' --output text)
  build:
    commands:
      - if [ -z "$GIT_BRANCH" ] ; then git clone --single-branch https://github.com/aws-samples/aws-fault-injection-simulator-workshop-v2.git ; else git clone --branch ${GIT_BRANCH} --single-branch https://github.com/aws-samples/aws-fault-injection-simulator-workshop-v2.git; fi   
      - git log -1 --pretty=format:"%h %s" 
      - cd ./aws-fault-injection-simulator-workshop-v2/supporting-services/vscode-server
      - npm install
      - ../../scripts/cdkbootstrap.sh
      #- if [ -z "$CDK_STACK" ] ; then cdk bootstrap ; else echo "Already bootstrapped" ; fi
      - npm run build
      #- cdk deploy Cloud9Stack --context is_event_engine="true" --require-approval never
      - cd ../../PetAdoptions/cdk/pet_stack/
      - npm install
      - npm run build
      - cdk deploy Services --context admin_role=${EE_TEAM_ROLE_ARN} --context is_event_engine="false" --require-approval=never --verbose -O ./out/out.json
      - cdk deploy ServicesSecondary --context admin_role=${EE_TEAM_ROLE_ARN} --context is_event_engine="false" --require-approval=never --verbose -O ./out/out.json
      - cdk deploy NetworkRegionPeering --require-approval=never --verbose -O ./out/out.json
      - cdk deploy NetworkRoutesMain --require-approval=never --verbose -O ./out/out.json
      - cdk deploy NetworkRoutesSecondary --require-approval=never --verbose -O ./out/out.json
      - cdk deploy S3Replica --require-approval=never --verbose -O ./out/out.json
      - cdk deploy Applications --require-approval=never --verbose -O ./out/out.json
      - cdk deploy ApplicationsSecondary --require-approval=never --verbose -O ./out/out.json
      - cdk deploy FisServerless --require-approval never --verbose -O ./out/out.json
      - cdk deploy Observability --require-approval never --verbose -O ./out/out.json
      - cdk deploy ObservabilitySecondary --require-approval never --verbose -O ./out/out.json
      - cdk deploy UserSimulationStack --require-approval never --verbose -O ./out/out.json
      - cdk deploy UserSimulationStackSecondary --require-approval never --verbose -O ./out/out.json
      - cdk deploy ObservabilityDashboard --require-approval never --verbose -O ./out/out.json
      - cd ../../../intro-experiment/cdk
      - npm install
      - cdk deploy --require-approval never --verbose -O ./out/out.json
artifacts:
  files: './aws-fault-injection-simulator-workshop-v2/PetAdoptions/cdk/pet_stack/out/out.json'
