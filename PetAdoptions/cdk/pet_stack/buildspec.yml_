version: 0.2
phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - npm install aws-cdk -g
      - npm install
      - CDK_STACK=$(aws cloudformation list-stacks --query 'StackSummaries[?(StackName==`CDKToolkit` && StackStatus==`CREATE_COMPLETE`)].StackId' --output text)
      - wget -O resources/aws-distro-for-opentelemetry-python-38-preview.zip https://raw.githubusercontent.com/aws-samples/one-observability-demo/main/PetAdoptions/cdk/pet_stack/resources/aws-distro-for-opentelemetry-python-38-preview.zip
      - wget -O resources/function.zip https://raw.githubusercontent.com/aws-samples/one-observability-demo/main/PetAdoptions/petstatusupdater/function.zip
  build:
    commands:
      - if [ -z "$CDK_STACK" ] ; then cdk bootstrap ; else echo "Already bootstrapped" ; fi
      - npm run build
      - cdk deploy Services --context admin_role=${EE_TEAM_ROLE_ARN} --context is_event_engine="true" --require-approval=never --verbose -O ./out/out.json
      - cdk deploy Applications --require-approval=never --verbose
      - cdk deploy FisServerless --require-approval=never --verbose
      - aws s3api get-object --bucket one-observability-workshop-tracker --key lab_user.txt resources/lab_user.txt --region us-east-1
artifacts:
  files: './out/out.json'
