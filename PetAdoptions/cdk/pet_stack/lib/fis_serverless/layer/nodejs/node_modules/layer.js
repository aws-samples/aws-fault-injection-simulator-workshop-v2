exports.layer_handler = async function (event, context) {
    // Inject ChAoS!!
    await inject_chaos();
    var old_handler = process.env.CHAOS_OLD_HANDLER
    
   //now invoke the old handler 
   //find the old handler and module
   console.log('Invoking old handler ' + old_handler);
 
   var modulename = old_handler.split('.');
   
   var importedModule = require(modulename[0]+ '.js');
   const userHandler = importedModule[modulename[1]];
    
    var orignal_res =  userHandler.apply(null, [event, context]);
    
    return orignal_res;
};

function delay(time) {
    return new Promise(resolve => setTimeout(resolve, time));
  };
  
async function inject_chaos()
{
  //inject chaos 
    console.log(' ******* Starting chaos injection *******')
    msDelay = Math.floor(Math.random() * 3000)
    if (msDelay % 4 == 0)
    {
        console.log('Chaos injected failure');
        process.exit(1);
    }
    else
    {
        console.log ('Injecting delay for ' + msDelay + ' ms' );
        await delay(msDelay);
    }  ;
};