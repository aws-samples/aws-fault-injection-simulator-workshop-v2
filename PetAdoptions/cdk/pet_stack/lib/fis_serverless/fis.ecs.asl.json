{
    "Comment": "State Machine for stopping ECS tasks using FIS",
    "StartAt": "ListClusters",
    "States": {
      "ListClusters": {
        "Type": "Task",
        "Next": "ListTasks",
        "Parameters": {},
        "Resource": "arn:aws:states:::aws-sdk:ecs:listClusters"
      },
      "ListTasks": {
        "Type": "Task",
        "Parameters": {
          "Cluster.$": "$.ClusterArns[0]"
        },
        "Resource": "arn:aws:states:::aws-sdk:ecs:listTasks",
        "Next": "ECSStopTaskExperimentTemplate"
      },
      "ECSStopTaskExperimentTemplate": {
        "Type": "Task",
        "Parameters": {
          "Actions": {
            "Key": {
              "ActionId": "aws:ecs:stop-task",
              "Description": "Run ECS StopTask",
              "Targets": {
                "Tasks": "ecsworkshoptask"
              }
            }
          },
          "ClientToken.$": "States.UUID()",
          "Targets": {
            "ecsworkshoptask": {
              "ResourceType": "aws:ecs:task",
              "ResourceArns.$": "$.TaskArns",
              "SelectionMode": "ALL"
            }
          },
          "Description": "Runs the Amazon ECS API action StopTask to stop the target task.",
          "RoleArn": "${FISRole}",
          "StopConditions": [
            {
              "Source": "none"
            }
          ]
        },
        "Resource": "arn:aws:states:::aws-sdk:fis:createExperimentTemplate",
        "Next": "ECSStopTask"
      },
      "ECSStopTask": {
        "Type": "Task",
        "Parameters": {
          "ClientToken.$": "States.UUID()",
          "ExperimentTemplateId.$": "$.ExperimentTemplate.Id"
        },
        "Resource": "arn:aws:states:::aws-sdk:fis:startExperiment",
        "Next": "GetExperiment"
      },
      "GetExperiment": {
        "Type": "Task",
        "Parameters": {
          "Id.$": "$.Experiment.Id"
        },
        "Resource": "arn:aws:states:::aws-sdk:fis:getExperiment",
        "Next": "Choice"
      },
      "Choice": {
        "Type": "Choice",
        "Choices": [
          {
              "Variable": "$.Experiment.State.Status",
              "StringEquals": "completed",
              "Next": "Success"
          },
          {
            "Variable": "$.Experiment.State.Status",
            "StringEquals": "failed",
            "Next": "Fail"
          },
          {
            "Variable": "$.Experiment.State.Status",
            "StringEquals": "cancelled",
            "Next": "Fail"
          }
        ],
        "Default": "Wait"
      },
      "Wait": {
        "Type": "Wait",
        "Seconds": 5,
        "Next": "GetExperiment"
      },
      "Fail": {
        "Type": "Fail"
      },
      "Success": {
        "Type": "Succeed"
      }
    }
  }