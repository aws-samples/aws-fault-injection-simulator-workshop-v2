on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:    # allows manual trigger

env:
  AWS_REGION: "us-east-1"
  EE_TEAM_ROLE_ARN: "arn:aws:iam::992382547812:role/GithubActionRole"

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps: 
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Debug directory structure
        run: |
          pwd
          ls -R

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::992382547812:role/GithubActionRole
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'  # adjust version as needed


      - name: Cache Node.js dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}

      - name: Install global dependencies
        run: |
          npm install aws-cdk -g
          aws cloudformation list-stacks --query 'StackSummaries[?(StackName==`CDKToolkit` && StackStatus==`CREATE_COMPLETE`)].StackId' --output text
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Deploy Pet Stack Services
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          npm install
          npm run build
          cdk deploy Services --context admin_role=$EE_TEAM_ROLE_ARN --context is_event_engine="true" --require-approval=never 
          cdk deploy ServicesSecondary --context admin_role=$EE_TEAM_ROLE_ARN --context is_event_engine="true" --require-approval=never 

      - name: Deploy Network Stacks
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          cdk deploy NetworkRegionPeering --require-approval=never
          cdk deploy NetworkRoutesMain --require-approval=never
          cdk deploy NetworkRoutesSecondary --require-approval=never

      - name: Deploy Application Stacks
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          cdk deploy S3Replica --require-approval=never
          cdk deploy Applications --require-approval=never
          cdk deploy ApplicationsSecondary --require-approval=never
          cdk deploy FisServerless --require-approval=never

      - name: Deploy Observability Stacks
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          cdk deploy Observability --require-approval=never
          cdk deploy ObservabilitySecondary --require-approval=never
          cdk deploy ObservabilityDashboard --require-approval=never

      - name: Deploy User Simulation Stacks
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          cdk deploy UserSimulationStack --require-approval=never
          sh ../../../az-experiment/scripts/removeusersimtags.sh
          cdk deploy UserSimulationStackSecondary --require-approval=never

      - name: Deploy Intro Experiment
        working-directory: ./intro-experiment/cdk
        run: |
          npm install
          cdk deploy --require-approval=never

      - name: Destroy Intro Experiment
        working-directory: ./PetAdoptions/cdk/pet_stack
        run: |
          cdk destroy --force --all --require-approval never

      - name: Destroy Workshop
        working-directory: ./intro-experiment/cdk
        run: |
          cdk destroy --force --all --require-approval never

#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: deployment-output
#          path: ./aws-fault-injection-simulator-workshop-v2/PetAdoptions/cdk/pet_stack/out/out.json
